{"version":3,"file":"static/js/871.d1c3c474.chunk.js","mappings":"gIACA,MAMA,EANkBA,IAAmB,IAAlB,SAAEC,GAAUD,EAC7B,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,SAAEA,I,4ECChC,MAyEA,EAzEsBG,KACpB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAEvCG,EAAAA,EAAAA,WAAU,KACmBC,WACzB,MAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACnE,GAAyB,IAArBJ,EAAUK,OAGZ,OAFAX,EAAiB,SACjBG,GAAW,GAGb,IACE,MACMS,EADkB,IAAI,IAAIC,IAAIP,EAAUQ,IAAIC,GAAKA,EAAEC,kBACxBF,IAAIG,GACnCC,MAAM,4DAADC,OAA6DF,IAC/DG,KAAKC,GAAOA,EAAIC,SAEfC,QAAgBC,QAAQC,IAAIb,GAClCZ,EAAiBuB,EACnB,CAAE,MAAOG,GACPC,QAAQD,MAAM,kJAAgCA,EAChD,CAAC,QACCvB,GAAW,EACb,GAEFyB,IACC,IASH,OACEhC,EAAAA,EAAAA,KAAA,WAASC,UAAU,YAAWF,UAC5BC,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CAAAlC,SACPO,GACCN,EAAAA,EAAAA,KAAA,KAAGC,UAAU,qBAAoBF,SAAC,gFACP,IAAzBI,EAAcY,QAChBf,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBF,SAAC,gLAEhCC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBF,SAC5BI,EAAce,IAAIgB,IACjBC,EAAAA,EAAAA,MAAA,MAAkBlC,UAAU,kBAAiBF,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OACEC,UAAU,mBACVmC,IAAKF,EAAKG,OAAS,oDACnBC,IAAKJ,EAAKK,aAAe,uDAE3BJ,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,kBAAiBF,SAAA,EAC9BoC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,uBAAsBF,SAAA,CAClCmC,EAAKM,QAAQ,KAAGN,EAAKO,KAAK,KAAGP,EAAKQ,WAErCP,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,uBAAsBF,SAAA,CAAC,uBAAMmC,EAAKS,YAEnD3C,EAAAA,EAAAA,KAAA,UACEC,UAAU,oBACV2C,QAASA,IA/BIvB,KAC3B,MACMwB,GADYlC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,IACzCgC,OAAO3B,GAAKA,EAAEC,iBAAmBC,GAC3DR,aAAakC,QAAQ,YAAapC,KAAKqC,UAAUH,IACjDzC,EAAiB6C,GAAQA,EAAKH,OAAOZ,GAAQA,EAAKb,KAAOA,KA2B5B6B,CAAoBhB,EAAKb,IAAItB,SAC7C,aAfMmC,EAAKb,YCvC5B,EATkBvB,IAAoB,IAAnB,UAAEY,GAAWZ,EAE9B,OADMiC,QAAQoB,IAAIzC,IAEhBV,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACE,EAAa,CAACQ,UAAWA,M","sources":["components/Container/Container.jsx","components/FavoritesList/FavoritesList.jsx","pages/Favorites/Favorites.jsx"],"sourcesContent":["import \"./Container.css\"\r\nconst Container = ({ children }) => {\r\n  return (\r\n    <div className=\"container\">{children}</div>\r\n  );\r\n};\r\n\r\nexport default Container;","import { useEffect, useState } from \"react\";\r\nimport Container from \"../Container/Container\";\r\nimport \"./FavoritesList.css\";\r\n\r\nconst FavoritesList = () => {\r\n  const [announcements, setAnnouncements] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchAnnouncements = async () => {\r\n      const favorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n      if (favorites.length === 0) {\r\n        setAnnouncements([]);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        const uniqueFavorites = [...new Set(favorites.map(f => f.announcementId))];\r\n        const promises = uniqueFavorites.map(id =>\r\n          fetch(`https://6882916c21fa24876a9b3c72.mockapi.io/announcement/${id}`)\r\n            .then(res => res.json())\r\n        );\r\n        const results = await Promise.all(promises);\r\n        setAnnouncements(results);\r\n      } catch (error) {\r\n        console.error(\"Помилка при отриманні об'яв:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchAnnouncements();\r\n  }, []);\r\n\r\n  const removeFromFavorites = (id) => {\r\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\r\n    const updated = favorites.filter(f => f.announcementId !== id);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(updated));\r\n    setAnnouncements(prev => prev.filter(item => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <section className=\"favorites\">\r\n      <Container>\r\n        {loading ? (\r\n          <p className=\"favorites__loading\">Завантаження...</p>\r\n        ) : announcements.length === 0 ? (\r\n          <p className=\"favorites__empty\">У вас поки немає об'яв у вибраному.</p>\r\n        ) : (\r\n          <ul className=\"favorites__list\">\r\n            {announcements.map(item => (\r\n              <li key={item.id} className=\"favorites__item\">\r\n                <img\r\n                  className=\"favorites__image\"\r\n                  src={item.image || \"https://via.placeholder.com/300x200?text=No+Image\"}\r\n                  alt={item.description || \"Без опису\"}\r\n                />\r\n                <div className=\"favorites__info\">\r\n                  <div className=\"favorites__info-item\">\r\n                    {item.country}, {item.city}, {item.street}\r\n                  </div>\r\n                  <div className=\"favorites__info-item\">Тип: {item.type}</div>\r\n                </div>\r\n                <button\r\n                  className=\"favorites__remove\"\r\n                  onClick={() => removeFromFavorites(item.id)}\r\n                >\r\n                  ✕\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FavoritesList;\r\n","import FavoritesList from \"../../components/FavoritesList/FavoritesList\";\r\n\r\nconst Favorites = ({ favorites }) => {\r\n        console.log(favorites)\r\n  return (\r\n    <main>\r\n      <FavoritesList favorites={favorites}/>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n"],"names":["_ref","children","_jsx","className","FavoritesList","announcements","setAnnouncements","useState","loading","setLoading","useEffect","async","favorites","JSON","parse","localStorage","getItem","length","promises","Set","map","f","announcementId","id","fetch","concat","then","res","json","results","Promise","all","error","console","fetchAnnouncements","Container","item","_jsxs","src","image","alt","description","country","city","street","type","onClick","updated","filter","setItem","stringify","prev","removeFromFavorites","log"],"sourceRoot":""}